<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes>881d20a10fe21010ad4437a98b767e2a,d67f1bbeb7e21010ad44ea56ee11a9d3,a68702f6b7621010ad44ea56ee11a90e,e6a9d997b7b61010ad44ea56ee11a911,17c0853d0fa61010ad4437a98b767e13,e3e0d376b7e21010ad44ea56ee11a924</includes>
        <macroponent display_value="Visual Board Demo Page">234803d2472d4990d0ece731e36d4383</macroponent>
        <name>Visual Board Mutation Failure Base Script</name>
        <required_translations/>
        <script><![CDATA[function script({api, event,imports, helpers})  { 
    console.log("Mutation Failure");
    const {
        emit,
        setState,
        state,
        context,
        data,
        elements
    } = api;
    const {
        'sn_vtb.constants': constantsInclude,
        'sn_vtb.cardHandlers': cardHandlersInclude,
        'sn_vtb.laneHandlers': laneHandlersInclude,
        'sn_vtb.stateUpdates': stateUpdatesInclude,
        'sn_vtb.notificationHandler': notificationHandlerInclude,
        'sn_vtb.utils': utilsInclude
    } = imports;
    const {
        DATA_BROKER_OP: {
            CARD_MOVE,
            LANE_HEADER_UPDATED
        },
        STATUS: {
            CRITICAL
        },
        ICONS: {
            CIRCLE_CLOSE_OUTLINE
        }
    } = constantsInclude();
    const {
        moveCardFailureHandler
    } = cardHandlersInclude();
    const {
        laneHeaderUpdateFailureHandler
    } = laneHandlersInclude();
    const {
        setBoardState,
        setBoardDirtyState
    } = stateUpdatesInclude();
    const {
        getErrorMessage
    } = utilsInclude();
    const {
        showAlert
    } = notificationHandlerInclude();

    console.log("event ", event);
    const {
        payload: {
            errors,
            operation
        }
    } = event;
    const {
        boardState,
        boardDirtyState = {}
    } = state;
    const {
        [operation]: operationFailPayload,
        ...newBoardDirtyState
    } = boardDirtyState || {};

    let newBoardState = null;
    let message = null;

    switch (operation) {
        case CARD_MOVE:
            if (operationFailPayload) {
                      let newBoardData = moveCardFailureHandler(boardState, operationFailPayload);
                      newBoardState = newBoardData.newBoardState;
                      let operationFailFormData = newBoardData.cardFormData;
                      operationFailFormData.errorMessage = getErrorMessage(errors);
                      api.setState('cardForm',operationFailFormData);
          }
            break;

        case LANE_HEADER_UPDATED:
            if (operationFailPayload) 
                newBoardState = laneHeaderUpdateFailureHandler(boardState, operationFailPayload);
            break;
        
        default:    
            if (errors)
                showAlert(api, {
                    status: CRITICAL,
                    icon: CIRCLE_CLOSE_OUTLINE,
                    content: {
                        type: "html",
                        value: getErrorMessage(errors)
                    }
                });
    }

    if (newBoardState)
        setBoardState(api, newBoardState);

    if (operationFailPayload)
        setBoardDirtyState(api, newBoardDirtyState);
 }]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>dan.munk</sys_created_by>
        <sys_created_on>2022-02-10 23:38:44</sys_created_on>
        <sys_id>3b4803d2472d4990d0ece731e36d43c2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Visual Board Mutation Failure Base Script</sys_name>
        <sys_package display_value="Electronic Medication Administration Record" source="x_snc_electronic_0">9e178adc472dc190d384ee82e36d4388</sys_package>
        <sys_policy/>
        <sys_scope display_value="Electronic Medication Administration Record">9e178adc472dc190d384ee82e36d4388</sys_scope>
        <sys_update_name>sys_ux_client_script_3b4803d2472d4990d0ece731e36d43c2</sys_update_name>
        <sys_updated_by>dan.munk</sys_updated_by>
        <sys_updated_on>2022-02-10 23:38:44</sys_updated_on>
    </sys_ux_client_script>
</record_update>
